# Name of your application. Used to uniquely configure containers.
service: ollama

# Name of the container image.
image: marcossv9/ollama

# Deploy to these servers.
servers:
  web:
    - ollama.marcos-silva.com

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: ollama.marcos-silva.com
  healthcheck:
    interval: 3
    path: /
    timeout: 3
  app_port: 11434

# Credentials for your image host.
registry:
  username: marcossv9

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  # secret:
  #   - RAILS_MASTER_KEY
  clear:
    OLLAMA_HOST: 0.0.0.0
    OLLAMA_DEBUG: 0

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f

# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - ollama_data:/root/.ollama

# Configure the image builder.
builder:
  arch: amd64
  dockerfile: ollama.Dockerfile
